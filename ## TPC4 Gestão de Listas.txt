
### TPC4: Aplicação para manipulação de listas de inteiros
- Crie uma aplicação em Python que coloca no monitor o seguinte menu:
    * (1) Criar Lista 
    * (2) Ler Lista
    * (3) Soma
    * (4) Média
    * (5) Maior
    * (6) Menor
    * (7) estaOrdenada por ordem crescente
    * (8) estaOrdenada por ordem decrescente
    * (9) Procura um elemento
    * (0) Sair
- O utilizador irá escolher uma das opções introduzindo o número correspondente;
- Se a opção não for sair, a aplicação executa a operação pretendida, apresenta o resultado e a seguir apresenta de novo o menu;
- Se a opção for sair, a aplicação termina colocando uma mensagem no monitor.

* No desenvolvimento da aplicação deverá ter em atenção o seguinte:
    - A aplicação terá uma variável interna para guardar uma lista de números;
    - Na opção 1, deverá ser criada uma lista de números aleatórios entre 1 e 100 que será guardada na variável interna;
    - Na opção 2, deverá ser criada uma lista com números introduzidos pelo utilizador, que será guardada na variável interna;
    - Nestas primeiras opções, se a variável interna já tiver uma lista, esta será sobreposta/apagada pela nova lista;
    - Na opção 3, será calculada a soma dos elementos na lista no momento;
    - Na opção 4, será calculada a média dos elementos na lista no momento;
    - Na opção 5, será calculado o maior elemento da lista no momento;
    - Na opção 6, será calculado o menor elemento da lista no momento;
    - Na opção 7, a aplicação deverá indicar (Sim/Não) se a lista está ordenada por ordem crescente;
    - Na opção 8, a aplicação deverá indicar (Sim/Não) se a lista está ordenada por ordem decrescente;
    - Na opção 9, a aplicação irá procurar um elemento na lista, se o encontrar deverá devolver a sua posição, devolverá -1 se o elemento não estiver na lista;
    - Se o utilizador selecionar a opção 0, a aplicação deverá terminar mostrando a lista que está nesse momento guardada.


ALUNO: José Carlos de Barros e Sousa - A5851

CODIGO

import random

lista_numeros = []


### Menu para escolher o que pretende fazer

def menu():
    print("\nMenu:")
    print("(1) Criar Lista Aleatória")
    print("(2) Ler Lista do Utilizador")
    print("(3) Soma dos Elementos")
    print("(4) Média dos Elementos")
    print("(5) Maior Elemento")
    print("(6) Menor Elemento")
    print("(7) Lista está Ordenada por Ordem Crescente?")
    print("(8) Lista está Ordenada por Ordem Decrescente?")
    print("(9) Procurar um Elemento")
    print("(0) Sair")
    return input("Escolha uma opção: ")


### Permite gerar uma lista aleatória com um determinado nº de elementos a definir pelo utilizador

def criar_lista_aleatoria():
    global lista_numeros
    tamanho = int(input("Quantos números deseja na lista aleatória? "))
    lista_numeros = [random.randint(1, 100) for _ in range(tamanho)]
    print(f"Lista criada: {lista_numeros}")


### Permite criar uma lista pelo utilizador

def ler_lista_usuario():
    global lista_numeros
    tamanho = int(input("Quantos números deseja adicionar à lista? "))
    lista_numeros = []
    for i in range(tamanho):
        while True:
            try:
                numero = int(input(f"Digite o número {i + 1} de {tamanho}: "))
                lista_numeros.append(numero)
                break
            except ValueError:
                print("Por favor, insira um número válido.")
    print(f"Lista criada: {lista_numeros}")


### Função que soma elementos da lista

def calcular_soma():
    if lista_numeros:
        print(f"Soma dos elementos: {sum(lista_numeros)}")
    else:
        print("A lista está vazia.")

### Função que calcula média dos valores da lista

def calcular_media():
    if lista_numeros:
        print(f"Média dos elementos: {sum(lista_numeros) / len(lista_numeros):.2f}")
    else:
        print("A lista está vazia.")

### Função que identifica maior elemento da lista

def maior_elemento():
    if lista_numeros:
        print(f"Maior elemento: {max(lista_numeros)}")
    else:
        print("A lista está vazia.")


### Função que identifica menor elemento da lista

def menor_elemento():
    if lista_numeros:
        print(f"Menor elemento: {min(lista_numeros)}")
    else:
        print("A lista está vazia.")


### Função que verifica se lista está ordenada de forma crescente

def esta_ordenada_crescente():
    if lista_numeros:
        print("Sim" if lista_numeros == sorted(lista_numeros) else "Não")
    else:
        print("A lista está vazia.")


### Função que verifica se lista está ordenanda de forma decrescente

def esta_ordenada_decrescente():
    if lista_numeros:
        print("Sim" if lista_numeros == sorted(lista_numeros, reverse=True) else "Não")
    else:
        print("A lista está vazia.")

### Função que procura elemento na lista

def procurar_elemento():
    if lista_numeros:
        try:
            elemento = int(input("Digite o número que deseja procurar: "))
            posicao = lista_numeros.index(elemento) if elemento in lista_numeros else -1
            if posicao != -1:
                print(f"O número {elemento} está na posição {posicao}.")
            else:
                print(f"O número {elemento} não está na lista.")
        except ValueError:
            print("Por favor, insira um número válido.")
    else:
        print("A lista está vazia.")

### Finaliza aplicação e retorna lista.

def sair():
    print(f"A aplicação terminou. Lista final: {lista_numeros}")
    exit()

while True:
    opcao = menu()
    if opcao == '1':
        criar_lista_aleatoria()
    elif opcao == '2':
        ler_lista_usuario()
    elif opcao == '3':
        calcular_soma()
    elif opcao == '4':
        calcular_media()
    elif opcao == '5':
        maior_elemento()
    elif opcao == '6':
        menor_elemento()
    elif opcao == '7':
        esta_ordenada_crescente()
    elif opcao == '8':
        esta_ordenada_decrescente()
    elif opcao == '9':
        procurar_elemento()
    elif opcao == '0':
        sair()
    else:
        print("Opção inválida. Por favor, tente novamente.")
